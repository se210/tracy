/*
 *  Tracy configuration for OpenVG 1.0
 */

name:       "VG"
library:    "libopenvg_orig.dll"
language:   "c++"

includes
{
    "openvg.h"
    "vgu.h"
    "vgcontext.h"
    "vgcontext_symbian.h"
}

headers
{
    "openvg.h"
    "vgu.h"
    "vgcontext.h"
    "vgcontext_symbian.h"
    "khronos_types.h"
}

macros
{
    VG_API_CALL:   "extern"
    VGI_API_CALL:  "extern"
    IMPORT_C:      "extern"
}

sources
{
}

hooks
{
    "vg_hooks.c"
    tracer
    {
        "vgtracer_hooks.c"
    }
    player
    {
        "vgplayer_hooks.c"
    }
}

/* Symbian specific configuration */
symbian
{
    systemincludes
    {
        "fbs.h"
        "e32cmn.h"
    }
    
    tracer
    {
        target:     "libopenvg.dll"
        uid1:       "0x1000008d"
        uid2:       "0x0ede0f2f"
        capability: "CAP_GENERAL_DLL"
        vendorid:   "VID_DEFAULT"
        
        deffiles
        {
            "libopenvg_winsu.def"
        }
        
        libraries
        {
            "fbscli.lib"
        }
    }
    
    player
    {
        target:     "vgplayer.exe"
        uid1:       "0x100039ce"
        uid2:       "0xa007021a"
        capability: "None"
        vendorid:   "0"
        
        libraries
        {
            "libopenvg.lib"
        }
        
        libraries
        {
            "fbscli.lib"
        }
    }
}

/* Mapping from OpenVG types to native types */
types
{
    /* Symbian binding API types */
    TInt:                 int
    TSize:                object
    "CFbsBitmap*":        object
    
    /* VG objects */
    VGPath:               object
    VGPaint:              object
    VGImage:              object
}

/* Special function attributes */
functions
{
    VGISymbianTerminate(terminator = 1)
    VGITerminate(terminator = 1)

    vgCreatePath(runtimestate = 1)
    {
        @return:    "path"
        datatype:   "path.datatype"
    }
    
    vgAppendPathData(runtimestate = 1)
    {
        dstPath:    "path"
    }

    vgModifyPathCoords(runtimestate = 1)
    {
        dstPath:    "path"
    }
}

/* State tracking */
state
{
    path
    {
        datatype
        segments
        segment_count
    }
}
