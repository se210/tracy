/*
 *  Tracy configuration for OpenVGU 1.1
 */

name:       "vgu11"
language:   "c"

apiheaders:
[
    "vgu.h"
]


tracer:
{
    systemincludes:
    [
       "VG/vgu.h"
       "khronos_types.h"
    ]    
   
}

player:
{
    systemincludes:
    [
        "VG/vgu.h"
    ]
   
}



/* Symbian specific configuration */
symbian:
{


    
    
    includedirs:
    [
        "\\epoc32\\include\\platform"
    ]
    
    tracer:
    {
        
        uid1:       "0x1000008d"
        uid2:       "0x0ede0f2d"
        capability: "CAP_GENERAL_DLL"
        vendorid:   "VID_DEFAULT"

        symbol_map:
        {
            "libopenvgu11u.def": "libOpenVGU_orig.dll" 
        }
        
        deffiles:
        [
            "libopenvgu11u.def"
        ]
    }
    
    passthrough_tracer:
    {
        uid1:       "0x1000008D"
        uid2:       "0x10281AB9"
        capability: "ALL -TCB"
        vendorid:   "0"

        /* Redirect internal functions up to this ordinal
         * to the original DLL
         */
        max_internal_ordinal: 300

        symbol_map:
        {
            "../../cross-api/common/common.def": "master-tracer.dll"  
            "default": "libOpenVGU_orig.dll"
        }

        deffiles:
        [
            "libopenvgu11u.def"
        ]
        
    }
    
    player:
    {
        uid1:       "0x100039ce"
        uid2:       "0xa007021b"
        capability: "None"
        vendorid:   "0"
        
        libraries:
        [
            "libOpenVGU.lib"
        ]
    }
}
unix:
{
    tracer:
    {
        target:     "libOpenVG_tracer.so"
        library:    "libOpenVG.so"
    }

    player:
    {
        libraries:
        [
            "OpenVG"
        ]
    }
}


win32:
{
    includedirs:
    [
        "../libraries/ri_package_1.1/ri/include"
    ]
	  
    librarydirs:
    [
        "../libraries/ri_package_1.1/ri/include"
    ]

    macros:
    {
        "_DLL_EXPORTS": 1
    }
}

types:
{
    /* VG objects */
    VGPath(namespace = "ctx.root_ctx"):               object
}

functions:
{
    vguLine:
    {
    }
    vguPolygon:
    {
        points:
        {
            metatype(class = "array", size = "count * 2")
        }
    }
    vguRect:
    {
    }
    vguRoundRect:
    {
    }
    vguEllipse:
    {
    }
    vguArc:
    {
        arcType:    ctx.arcType
    }
    vguComputeWarpQuadToSquare:
    {
        matrix:
        {
            metatype(class = "array", size = 9)
        }
        @modify:       "ctx.matrix"
    }
    vguComputeWarpSquareToQuad:
    {
      matrix:
        {
            metatype(class = "array", size = 9)
        }
        @modify:       "ctx.matrix" 
    }
    vguComputeWarpQuadToQuad:
    {
        matrix:
        {
            metatype(class = "array", size = 9)
        }
        @modify:       "ctx.matrix" 
    }

    
}

/* State tracking */
state:
{
    ctx:
    {
        arcType
        matrix
        
        /* Root context for shared contexts */
        root_ctx
    }
    
}

