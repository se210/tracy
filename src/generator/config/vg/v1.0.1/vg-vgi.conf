/*
 *  Tracy configuration for OpenVG 1.0 using the S60 OpenVG engine
 */

name: "vg10-vgi"

sys.include:
[
    "vg.conf"
]

apiheaders:
[
    "vgcontext.h"
    "vgcontext_symbian.h"
]

types:
{
    /* Symbian binding API types */
    TInt:                 int
    TSize:                object
    "CFbsBitmap*":        object
}

hooks:
[
    "vg_hooks_vgi.cpp"
]

tracer:
{
    hooks:
    [
        "vg_hooks_tracer_vgi.cpp"
    ]
}

player:
{
    hooks:
    [
        "vg_hooks_player_vgi.cpp"
    ]
}

functions:
{
    VGIInitialize:
    {
        width:    "ctx.render_width"
        height:   "ctx.render_height"
        @set:     "ctx"
    }

    VGIResize:
    {
        width:    "ctx.render_width"
        height:   "ctx.render_height"
    }
    
    VGITerminate(terminator = 1):
    {
        @set:     "ctx"
    }
    
    VGISymbianCopyToBitmap(framemarker = 1):
    {
    }

    VGISymbianInitialize:
    {
        @set:     "ctx"
    }

    VGISymbianTerminate(terminator = 1):
    {
        @set:     "ctx"
    }
    
    VGICopyToTarget(framemarker = 1):
    {
    }
}

/* Symbian specific configuration */
symbian:
{
    hooks:
    [
        "vg_hooks_symbian.cpp"
    ]

    systemincludes:
    [
        "vg/vgcontext_symbian.h"
    ]
    
    includedirs:
    [
        "\\epoc32\\include\\vg"
    ]
    
    tracer:
    {
        library:    "libopenvg_orig.dll"
        uid1:       "0x1000008d"
        uid2:       "0x0ede0f2f"
        capability: "CAP_GENERAL_DLL"
        vendorid:   "VID_DEFAULT"

        deffiles:
        [
            "libopenvg_marmu.def"
        ]
    }
    
    player:
    {
        uid1:       "0x100039ce"
        uid2:       "0xa007021a"
        capability: "None"
        vendorid:   "0"
        
        libraries:
        [
            "libopenvg.lib"
        ]
    }
}

/* Win32 specific configuration */
win32:
{
    systemincludes:
    [
        "vg/vgcontext.h"
    ]

    includedirs:
    [
        "../../../../libraries/2D_OpenVG_1_0/renderer/inc"
    ]
    
    librarydirs:
    [
        "../../../../../lib"
    ]

    macros:
    {
        /* Enable EGL instrumentation */
        TRACER_USE_EGL_INSTRUMENTATION: 1
        TRACER_USE_STUB_EGL:            1
    }
    
    player:
    {
        libraries:
        [
            "libOpenVG.lib"
        ]
        
        sources:
        [
            "vgplayer_win32.cpp"
        ]
    
        includes:
        [
            "vgplayer_win32.h"
        ]

        headers:
        [
            "vgplayer_vgi.h"
            "vgplayer_win32.h"
        ]

        hooks:
        [
            "vg_hooks_player_win32.cpp"
        ]
    }
}
